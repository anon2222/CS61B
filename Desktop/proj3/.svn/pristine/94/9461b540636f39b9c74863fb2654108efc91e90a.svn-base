package graph;

import org.junit.Test;
import static org.junit.Assert.*;

/** Unit tests for the Graph class.
 *  @author Bo Liu
 */
public class GraphTesting {

    @Test
    public void emptyGraph() {
        DirectedGraph g = new DirectedGraph();
        assertEquals("Initial graph has vertices", 0, g.vertexSize());
        assertEquals("Initial graph has edges", 0, g.edgeSize());
    }

    @Test
    public void maxvertexTest() {
        DirectedGraph g = new DirectedGraph();
        g.add();
        g.add();
        g.add();
        g.remove(3);
        assertEquals(2, g.maxVertex());
    }

    @Test
    public void containsTest() {
        UndirectedGraph g = new UndirectedGraph();
        g.add();
        g.add();
        g.add();
        g.add();
        assertTrue(g.contains(2));
        assertFalse(g.contains(5));
        g.add(1, 2);
        assertEquals(2, g.edgeSize());
        g.add(1, 3);
        g.add(3, 4);
        assertTrue(g.contains(1, 2));
        assertTrue(g.contains(3, 4));
        assertFalse(g.contains(2, 4));
        g.remove(2, 4);
        assertFalse(g.contains(2, 4));
        g.remove(1);
        assertFalse(g.contains(1, 2));
    }

    @Test
    public void succpreTest() {
        DirectedGraph g = new DirectedGraph();
        g.add();
        g.add();
        g.add();
        g.add();
        g.add(1, 3);
        assertEquals(1, g.edgeSize());
        g.add(1, 4);
        g.add(2, 3);
        g.add(3, 4);
        assertEquals(4, g.successor(1, 1));
        assertEquals(3, g.successor(2, 0));
        assertEquals(0, g.successor(1, 3));
        assertEquals(0, g.successor(5, 0));
        //assertEquals(1, g.predecessor(3, 1));
        //assertEquals(3, g.predecessor(4, 2));
    }

    @Test
    public void ddegreeTest() {
        DirectedGraph g = new DirectedGraph();
        g.add();
        g.add();
        g.add();
        g.add();
        g.add(1, 3);
        g.add(1, 4);
        g.add(2, 3);
        g.add(2, 1);
        assertEquals(2, g.inDegree(3));
        assertEquals(0, g.inDegree(5));
        assertEquals(2, g.outDegree(2));
        assertEquals(0, g.outDegree(5));
    }

    @Test
    public void udegreeTest() {
        UndirectedGraph g = new UndirectedGraph();
        g.add();
        g.add();
        g.add();
        g.add();
        g.add(1, 3);
        g.add(1, 4);
        g.add(2, 3);
        g.add(2, 1);
        assertEquals(2, g.inDegree(3));
        assertEquals(0, g.inDegree(5));
        assertEquals(2, g.outDegree(3));
        assertEquals(0, g.outDegree(5));
    }
}
