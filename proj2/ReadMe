Version 3.0 7/31/2014

 The KJumpingCube game1
is a simple two-person board game. It is a pure strategy game,
involving no element of chance. For this second project, you are to implement our version
of this game, which weâ€™ll call jump61, allowing a user to play against a computer or against
another person, or to allow the computer to play itself.

CONTENTS:
---------

README                 This file.  You need not turn this in.
        
Makefile               For those of you using the standard Unix tool chain
                       rather than Eclipse, this file provides for some
                       simple compilation/testing control.  See the 
                       comments in it for the targets provided.  Those of
                       you using Eclipse will need it on the instructional
                       machines (the commands 'make' and 'make check' must
                       work correctly on your submission, regardless of
                       which editor or IDE you used).

staff-version          If we update the skeleton, this file will contain a
                       unique version id indicating what version of the
                       skeleton is currently in use.


jump61/

    Makefile           A simple makefile that delegates all requests to
                       the outer directory's makefile.
                        
    Main.java          Entry point to program. You may modify this if you
                       want, but it will work as it stands.
    UnitTest.java      Main unit-test file, which calls any others.


    The following files in jump61 are all optional.  Use them if you see fit,
    and remove any you don't use.


    Side.java           Defines symbolic names for the colors of squares
                        and players.

    Board.java          The superclass of playing boards.
    Square.java         Used in Board to represent the contents of a single
                        square.

    ConstantBoard.java  A type of Board that delegates operations to another
                        Board and does not allow operations that modify a
                        Board.

    MutableBoard.java   A type of Board whose contents can be changed.

    Game.java           Abstracts the complete state of a game and
                        solicits moves from Players.

    Player.java         The superclass of all types of Players.  A Player is
                        something that makes moves.

    HumanPlayer.java    Represents a player who sits at the terminal typing
                        moves.

    AI.java             An automated (AI) player.

    Defaults.java       Gathering place for default parameters.

    GameException.java  Used for internal signalling of user errors,

    Display.java        A class representing the GUI (use optional).
    BoardWidget.java    Used in the GUI to display the actual board.

    Usage.txt           A resource containing a Usage message.
    Help.txt            A resource containing a summary of commands.

    BoardTest.java      Some unit tests on Boards.

testing/

    Makefile            A Makefile for controlling testing.  The command
                        make check runs the test script over all test cases.

    ReadMe              An explanation of test-jump61's input format.

    test00-1.in         Simple test, showing the format of test files.
                        REMINDER: This is a sample only.  It DOESN'T 
                        constitute an adequate test.  
    test00-1.out        Expected boards output from test00-1.in

    test00-err-1.in     Simple input containing erroneous commands.  The
                        program must report and ignore these commands without
                        crashing.
    test00-err-1.out    Expected boards output by the 'dump' command in
                        command1.in


